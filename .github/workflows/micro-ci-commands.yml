name: ESGI Micro CI Commands

on: [push, pull_request]

jobs:
  build:
    name: Build Micro CI Commands Project
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Project
      uses: actions/checkout@v1
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install && npm install --development
      name: Install dependencies
    - run: npm run build --if-present
      name: "Build code"
    - run: npm test
      name: Test code


  deploy:
    name: Build/Publish Docker Images to DockerHub & Deploy to Azure VM
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout Project
      uses: actions/checkout@v1

    - name: Build & Publish Docker Image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: esgimicroci/al2-commands
        tag_with_ref: true

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az vm run-command invoke -g ${{ secrets.AZURE_RESOURCE_GRP }} -n ${{ secrets.AZURE_VM }} --command-id RunShellScript --scripts \
          "cd /home/micro-ci-al2/micro-ci-commands && \ 
          wget -q https://raw.githubusercontent.com/esgi-microservices-al2/micro-ci-commands/master/.github/azure/docker-compose.yml -O docker-compose.yml && \ 
          wget -q https://raw.githubusercontent.com/esgi-microservices-al2/micro-ci-commands/master/.github/azure/init_database.sh -O init_database.sh && \ 
          export COMMANDS_MONGO_PASSWORD=${{ secrets.COMMANDS_MONGO_PASSWORD }} && export MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} && \
          docker-compose pull api && docker-compose rm -s -f && docker-compose up -d && docker image prune -f --filter "label=MICROSERVICE_NAME=commands" "